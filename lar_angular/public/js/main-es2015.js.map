{"version":3,"sources":["webpack:///./src/app/app.component.html","webpack:///./src/app/post-dialog/post-dialog.component.html","webpack:///./src/app/post/post.component.html","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/post-dialog/post-dialog.component.css","webpack:///./src/app/post-dialog/post-dialog.component.ts","webpack:///./src/app/post.service.ts","webpack:///./src/app/post.ts","webpack:///./src/app/post/post.component.css","webpack:///./src/app/post/post.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["module.exports = \"<mat-toolbar color='primary'>\\r\\n    <span>Projeto: Laravel + Angular</span>\\r\\n  </mat-toolbar>\\r\\n\\r\\n<mat-divider></mat-divider>\\r\\n\\r\\n<div fxLayout=\\\"row wrap\\\" fxLayoutAlign=\\\"space-around stretch\\\" >\\r\\n  <app-post *ngFor=\\\"let p of posts\\\" [post]=\\\"p\\\"></app-post>\\r\\n</div>\\r\\n\\r\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\r\\n    <mat-icon>add</mat-icon>\\r\\n</button>\"","module.exports = \"<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-around left\\\" >\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Seu nome\\\" [(ngModel)]=\\\"dados.post.nome\\\">\\n            <mat-hint>Digite aqui seu nome</mat-hint>\\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Seu email\\\" [(ngModel)]=\\\"dados.post.email\\\">\\n            <mat-hint>Digite aqui seu email</mat-hint>\\n        </mat-form-field>\\n    </div>\\n\\n    <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between\\\">\\n        <mat-form-field fxFlex=\\\"50\\\">\\n            <input matInput placeholder=\\\"Titulo da mensagem\\\" [(ngModel)]=\\\"dados.post.titulo\\\">            \\n        </mat-form-field>\\n        <mat-form-field fxFlex=\\\"40\\\">\\n            <input matInput placeholder=\\\"Subtitulo de mensagem\\\" [(ngModel)]=\\\"dados.post.subtitulo\\\">            \\n        </mat-form-field>\\n    </div>\\n\\n    <mat-form-field>\\n        <textarea matInput placeholder=\\\"Deixei aqui sua mensagem\\\" [(ngModel)]=\\\"dados.post.mensagem\\\"></textarea>\\n    </mat-form-field>\\n</div>\\n\\n<input type=\\\"file\\\" style=\\\"display: none\\\" (change)=\\\"mudouarquivo($event)\\\" #fileinput>\\n<button mat-stroked-button color=\\\"primary\\\" (click)=\\\"fileinput.click()\\\">\\n    <mat-icon>add_a_photo</mat-icon>\\n    Adicionar uma foto\\n</button>\\n<p *ngIf=\\\"nomearquivo!= ''\\\" >\\n    <strong>Arquivo: </strong>{{nomearquivo}}\\n    <mat-icon color=\\\"primary\\\">done</mat-icon>\\n</p>\\n<br><br>\\n\\n<div style=\\\"text-align: center;\\\">\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"salvar()\\\">Ok</button>\\n    <button mat-button color=\\\"warn\\\" (click)=\\\"cancelar()\\\">Cancelar</button>\\n</div>\"","module.exports = \"<mat-card fxFlex class=\\\"card\\\">\\n  <mat-card-header>\\n    <div mat-card-avatar></div>\\n    <mat-card-title>{{post.titulo}}</mat-card-title>\\n    <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\\n  </mat-card-header>\\n  <img mat-card-image src=\\\"/storage/{{post.arquivo}}\\\" alt=\\\"Photo of a Shiba Inu\\\">\\n  <mat-card-content>\\n    <p>\\n      {{post.mensagem}}\\n    </p>\\n  </mat-card-content>\\n  <mat-card-actions>\\n    <button mat-button>LIKE</button>\\n    <button mat-button>SHARE</button>\\n  </mat-card-actions>\\n</mat-card>\\n\"","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".float-button {\\r\\n    position: fixed;\\r\\n    bottom: 40px;\\r\\n    right: 40px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLFdBQVc7QUFDZiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsb2F0LWJ1dHRvbiB7XHJcbiAgICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgICBib3R0b206IDQwcHg7XHJcbiAgICByaWdodDogNDBweDtcclxufSJdfQ== */\"","import { PostService } from './post.service';\nimport { Post } from './post';\nimport { Component } from '@angular/core';\nimport { MatDialog } from '@angular/material';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'meuapp';\n  private posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    private postService: PostService  \n  ){}\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n   \n  openDialog() {\n    const dialogRef = this.dialog.open(PostDialogComponent,{\n      width: '600px'\n    });\n    dialogRef.afterClosed().subscribe(\n      (result) =>{\n        if(result){\n          this.postService.salvar(result.post, result.arquivo);\n        }\n      }\n    );\n  }\n}\n","import { PostService } from './post.service';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule, MatDialog } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    PostService\n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QtZGlhbG9nL3Bvc3QtZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n    private nomearquivo: string = '';\n\n    private dados = {\n      post: new Post(\"\", \"\", \"\", \"\", \"\"),\n      arquivo: null\n    };\n\n  constructor(\n    public dialogref: MatDialogRef<PostDialogComponent>\n  ) { }\n\n  ngOnInit() {\n  }\n\n  mudouarquivo(event) {\n    // console.log(event.target.files[0]);\n    this.nomearquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  salvar() {\n    this.dialogref.close(this.dados);\n  }\n\n  cancelar() {\n    this.dialogref.close(null);\n  }\n}\n","import { Post } from './post';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpEventType, HttpEvent } from '@angular/common/http';\n\n@Injectable()\n\nexport class PostService {\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get(\"/api/\").subscribe(\n      (posts: any[]) => {\n        for (let p of posts) {\n          // com o this acessar o posts da classe public\n          this.posts.push(\n            new Post(p.nome, p.titulo, p.subtitulo, \n              p.email, p.mensagem, p.arquivo, p.id, \n              p.likes)\n          );\n        }\n      }\n    );\n  }\n\n  salvar(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file, file.name);\n\n    this.http.post(\"/api\", uploadData, {reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if (event.type == HttpEventType.Response) {\n          // console.log(event);\n          let p: any = event.body;\n          this.posts.push(\n            new Post(p.nome, p.titulo, p.subtitulo, \n              p.email, p.mensagem, p.arquivo, p.id, \n              p.likes)\n          );\n        }\n        if (event.type == HttpEventType.UploadProgress) {\n          console.log('UploadProgress');\n          console.log(event);\n        }\n      })\n  }\n}\n","export class Post {\r\n    constructor (\r\n        public nome: string,\r\n        public titulo: string,\r\n        public subtitulo: string,\r\n        public email: string,\r\n        public mensagem: string,\r\n        public arquivo?: string,\r\n        public id?: number,\r\n        public likes?: number\r\n    ){}\r\n}","module.exports = \".card {\\r\\n    max-width: 300px;\\r\\n    margin: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcG9zdC9wb3N0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQiIsImZpbGUiOiJzcmMvYXBwL3Bvc3QvcG9zdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiAzMDBweDtcclxuICAgIG1hcmdpbjogMTBweDtcclxufSJdfQ== */\"","import { Post } from '../post';\nimport { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  @Input() post:Post;\n  \n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}